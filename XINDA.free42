00 { 891-Byte Prgm }
// 4STK mode default, FUNC does not compile
// LBL A-J/a-e are local lettered
// Max label local 19
// Max register number so far 04
// Stats reserve registers 11 to 23
// Temp working register 24
// Local VARS
// L last X
// R REGS
// S temporary local REGS
// T T
// U temporary local T
// X X
// Y Y
// Z Z

// ========= app menu ==========
01 LBL "APP"
// MENU keys GTO for menu change, XEQ for operation
02 "FRAC"
03 KEY 1 GTO "FRAC"
04 ""
05 KEY 2 XEQ "INTS"
06 ""
07 KEY 3 XEQ "name"
08 ""
09 KEY 4 XEQ "name"
10 ""
11 KEY 5 XEQ "name"
12 ""
13 KEY 6 XEQ "name"
// UP
14 KEY 7 GTO "APP"
// DOWN
15 KEY 8 GTO "APP"
// EXIT
16 KEY 9 GTO "XITEND"
17 GTO "NTRMENU"

// ========= frac menu ==========
18 LBL "FRAC"
// MENU keys GTO for menu change, XEQ for operation
19 "÷+→"
20 KEY 1 XEQ 09
21 "÷++"
22 KEY 2 XEQ 10
23 "÷+-"
24 KEY 3 XEQ 11
25 "÷+×"
26 KEY 4 XEQ 12
27 "÷+÷"
28 KEY 5 XEQ 13
29 "→÷+"
30 KEY 6 XEQ 14
// UP
31 KEY 7 GTO "FRAC"
// DOWN
32 KEY 8 GTO "FRAC"
// EXIT
33 KEY 9 GTO "APP"
34 GTO "NTRMENU"

// ========= integers menu ==========
35 LBL "INTS"
// MENU keys GTO for menu change, XEQ for operation
36 "GCD"
37 KEY 1 XEQ "GCD"
38 ""
39 KEY 2 XEQ "name"
40 ""
41 KEY 3 XEQ "name"
42 ""
43 KEY 4 XEQ "name"
44 ""
45 KEY 5 XEQ "name"
46 ""
47 KEY 6 XEQ "name"
// UP
48 KEY 7 GTO "INTS"
// DOWN
49 KEY 8 GTO "INTS"
// EXIT
50 KEY 9 GTO "APP"
51 GTO "NTRMENU"

// ========= show menus and wait ==========
52 LBL "NTRMENU"
53 MENU
54 LBL 08
55 STOP
56 GTO 08

// ========= clear menus and exit ==========
57 LBL "XITEND"
58 CLMENU
59 EXITALL
60 RTN

// ========= frac local processsing ==========
// ignore resetting REGS back on exit, and fix last X
61 LBL 09
// store denominator
62 STO 00
63 R↓
64 X<>Y
65 ×
66 +
// store numerator
67 STO 01
68 RCL÷ 00
// makes decimal in X
69 GTO 16
70 LBL 10
71 XEQ 15
// add
// sub short cut
72 LBL 18
73 XEQ 19
// numerator addition
74 RCL 03
75 STO+ 01
76 R↓
77 GTO 16
78 LBL 11
79 XEQ 15
// sub
80 RCL 01
81 STO- 01
82 STO- 01
83 R↓
84 GTO 18
85 LBL 12
86 XEQ 15
// mul
// div short cut
87 LBL 17
88 RCL 02
89 STO× 00
90 R↓
91 RCL 03
92 STO× 01
93 R↓
94 GTO 16
95 LBL 13
96 XEQ 15
// div
97 RCL 00
98 STO 24
99 R↓
100 RCL 01
101 STO 00
102 R↓
103 RCL 24
104 STO 01
105 R↓
106 GTO 17
107 LBL 14
// to decimal in T, Z+Y/X
108 RCL 01
109 RCL÷ 00
110 ENTER
111 IP
112 ENTER
113 RCL× 00
114 RCL- 01
115 +/-
116 RCL 00
117 R↑
118 STO ST L
119 R↓
120 RTN
// clone and read new
121 LBL 15
122 RCL 00
123 STO 02
124 R↓
125 RCL 01
126 STO 03
127 R↓
128 GTO 09
// cancel GCD
129 LBL 16
130 RCL 01
// zero numerator?
131 X=0?
132 RTN
133 RCL 00
134 XEQ "GCD"
135 STO÷ 01
136 STO÷ 00
// display
137 XEQ 14
138 RTN
// normalize pair
139 LBL 19
140 RCL 00
141 RCL 02
142 XEQ "GCD"
// temp
143 STO 24
144 RCL 00
145 RCL÷ 24
146 STO× 03
147 RCL 02
148 RCL÷ 24
149 ENTER
150 STO× 01
151 R↓
// and denominator
152 STO× 00
153 RTN

// ========= number theory ==========
// ========= GCD ==========
154 LBL "GCD"
155 ".GCD"
156 XEQ "XINDA"
157 RTN
158 LBL ".GCD"
159 MOD
160 LASTX
161 X<>Y
162 X≠0?
163 GTO ".GCD"
164 +
165 XEQ "DRPX"
166 XEQ "XIT1"
167 RTN


// ========= execute indirect alpha ==========
// Use RCLT if you need the global T restored
// otherwise it's gone.
168 LBL "XINDA"
// save stack
169 LSTO "X"
170 R↓
171 LSTO "Y"
172 R↓
173 LSTO "Z"
174 R↓
175 LSTO "T"
// make local temp context for local T
176 LSTO "U"
177 R↓
// save last X
178 LASTX
179 LSTO "L"
180 R↓
// save registers
181 RCL "REGS"
182 LSTO "R"
// local temp context for registers
183 LSTO "S"
184 R↓
// do indirect
185 ASTO ST T
186 XEQ IND ST T
187 RTN

// ========= exit points ==========
// return a number of items
// perform all the clean up FUNC style
// use DRPX to consume input
// so FUNC 11 is a DRPX XIT1 kinda XEQ
// of a XINDA
// ========= zero return datums ==========
188 LBL "XIT0"
189 XEQ 00
190 XEQ 04
191 RTN

// ========= one return datum ==========
192 LBL "XIT1"
193 XEQ 00
194 XEQ 03
195 XEQ 05
196 RTN

// ========= two return datums ==========
197 LBL "XIT2"
198 XEQ 00
199 XEQ 02
200 XEQ 06
201 RTN

// ========= three return datums ==========
202 LBL "XIT3"
203 XEQ 00
204 XEQ 01
205 XEQ 07
206 RTN

// ========= four return datums ==========
207 LBL "XIT4"
208 XEQ "STOT"
209 XEQ 00
210 XEQ "LRCLT"
211 RTN

// ========= exit stack repair ==========
212 LBL 04
213 RCL "T"
214 LBL 03
215 RCL "Z"
216 LBL 02
217 RCL "Y"
218 LBL 01
219 RCL "X"
220 RTN

// ========= rotary fixing ==========
221 LBL 07
222 R↑
223 LBL 06
224 R↑
225 LBL 05
226 R↑
227 RTN

// ========= T management ==========
// ========= repair global T ==========
228 LBL "RCLT"
229 RCL "T"
230 R↓
231 RTN

// ========= store local T (U) ==========
232 LBL "STOT"
233 R↑
234 STO "U"
235 R↓
236 RTN

// ========= repair local T (U) ==========
237 LBL "LRCLT"
238 RCL "U"
239 R↓
240 RTN

// ========= restore registers and last X ==========
// restore registers called by XIT0-XIT4.
241 LBL 00
242 RCL "R"
243 STO "REGS"
244 R↓
// restore last X
245 RCL "L"
246 STO ST L
247 R↓
248 RTN

// ========= drop one return value ==========
// T->Z->Y->X->L
// local context
249 LBL "DRPX"
250 LSTO "U"
251 XEQ "STOT"
252 RCL "X"
253 STO "L"
254 R↓
255 RCL "Y"
256 STO "X"
257 R↓
258 RCL "Z"
259 STO "Y"
260 R↓
261 RCL "T"
262 STO "Z"
263 R↓
264 XEQ "LRCLT"
265 RTN

// ========= temporary register switching ==========
// imoprt local copy of registers to S
266 LBL "IMPRG"
267 XEQ "EXREG"
268 XEQ "EXREG"
269 RTN
// this is it's own inverse, if used twice by the above S
// is initialized with a local copy of REGS
// use this to export registers from function
270 LBL "EXREG"
271 XEQ "STOT"
272 RCL "R"
273 STO "S"
274 R↓
275 RCL "REGS"
276 STO "R"
277 R↓
278 XEQ "LRCLT"
// ========= export registers from S ==========
279 LBL "EXPRG"
280 XEQ "STOT"
281 RCL "S"
282 STO "REGS"
283 R↓
284 XEQ "LRCLT"
285 RTN

// ========= utility functions ==========
// ========= test shift was last key ==========
286 LBL "SFT?"
287 FS? 64
288 RTNYES
289 RTNNO
