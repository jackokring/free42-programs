00 { 1112-Byte Prgm }
// 4STK mode default, FUNC does not compile
// LBL A-J/a-e are local lettered (for HP 41ᴇxecute 15 options)
// Max label local 19
// Max register number so far 04 (fractions)
// Stats reserve registers 11 to 23 (do not alter)
// Temp working register 24 (if needed)
// Local VARS
// L last X
// R REGS
// S temporary local REGS
// T T
// U temporary local T
// X X
// Y Y
// Z Z

// ========= app menu ==========
// divide by related sections
01 LBL "APP"
// MENU keys GTO for menu change, XEQ for operation
02 "FRAC"
// fractions
03 KEY 1 GTO "FRAC"
04 "INTS"
// integer operations
05 KEY 2 XEQ "INTS"
06 "PDFS"
// beta and probability density functions (integration)
07 KEY 3 XEQ "PDFS"
08 ""
09 KEY 4 XEQ "name"
10 ""
11 KEY 5 XEQ "name"
12 ""
13 KEY 6 XEQ "name"
// UP
14 KEY 7 GTO "APP"
// DOWN
15 KEY 8 GTO "APP"
// EXIT
16 KEY 9 GTO "XITEND"
17 GTO "NTRMENU"

// ========= fraction menu ==========
18 LBL "FRAC"
// MENU keys GTO for menu change, XEQ for operation
19 "÷+→"
// store initial fraction as N/D for 4 operation postfix
20 KEY 1 XEQ 09
21 "÷++"
22 KEY 2 XEQ 10
23 "÷+-"
24 KEY 3 XEQ 11
25 "÷+×"
26 KEY 4 XEQ 12
27 "÷+÷"
28 KEY 5 XEQ 13
29 "→÷+"
// print fraction from N/D
30 KEY 6 XEQ 14
// UP
31 KEY 7 GTO "FRAC"
// DOWN
32 KEY 8 GTO "FRAC"
// EXIT
33 KEY 9 GTO "APP"
34 GTO "NTRMENU"

// ========= integers menu ==========
35 LBL "INTS"
// MENU keys GTO for menu change, XEQ for operation
36 "GCD"
// greatest common divisor
37 KEY 1 XEQ "GCD"
38 "LCM"
// least common multiple
39 KEY 2 XEQ "LCM"
40 ""
41 KEY 3 XEQ "name"
42 ""
43 KEY 4 XEQ "name"
44 ""
45 KEY 5 XEQ "name"
46 ""
47 KEY 6 XEQ "name"
// UP
48 KEY 7 GTO "INTS"
// DOWN
49 KEY 8 GTO "INTS"
// EXIT
50 KEY 9 GTO "APP"
51 GTO "NTRMENU"

// ========= PDFs menu ==========
52 LBL "PDFS"
// MENU keys GTO for menu change, XEQ for operation
53 "BETA"
54 KEY 1 XEQ "BETA"
55 ""
56 KEY 2 XEQ "name"
57 ""
58 KEY 3 XEQ "name"
59 ""
60 KEY 4 XEQ "name"
61 ""
62 KEY 5 XEQ "name"
63 ""
64 KEY 6 XEQ "name"
// UP
65 KEY 7 GTO "PDFS"
// DOWN
66 KEY 8 GTO "PDFS"
// EXIT
67 KEY 9 GTO "APP"
68 GTO "NTRMENU"

// ========= menu utilities ==========
// ========= show menus and wait ==========
69 LBL "NTRMENU"
70 MENU
71 LBL 08
72 STOP
73 GTO 08

// ========= clear menus and exit ==========
74 LBL "XITEND"
75 CLMENU
76 EXITALL
77 RTN

// ========= FRAC ==========
// ========= frac local processsing ==========
// don't use temporay REGS as persists
// display post operation uses all 4 levels
// L register is decimal representation
78 LBL 09
// store denominator
79 STO 00
80 R↓
81 X<>Y
82 ×
83 +
// store numerator
84 STO 01
85 RCL÷ 00
// makes decimal in X
86 GTO 16
87 LBL 10
88 XEQ 15
// add
// sub short cut
89 LBL 18
90 XEQ 19
// numerator addition
91 RCL 03
92 STO+ 01
93 R↓
94 GTO 16
95 LBL 11
96 XEQ 15
// sub
97 RCL 01
98 STO- 01
99 STO- 01
100 R↓
101 GTO 18
102 LBL 12
103 XEQ 15
// mul
// div short cut
104 LBL 17
105 RCL 02
106 STO× 00
107 R↓
108 RCL 03
109 STO× 01
110 R↓
111 GTO 16
112 LBL 13
113 XEQ 15
// div
114 RCL 00
115 STO 24
116 R↓
117 RCL 01
118 STO 00
119 R↓
120 RCL 24
121 STO 01
122 R↓
123 GTO 17
124 LBL 14
// to decimal in T, Z+Y/X
125 RCL 01
126 RCL÷ 00
127 ENTER
128 IP
129 ENTER
130 RCL× 00
131 RCL- 01
132 +/-
133 RCL 00
134 R↑
135 STO ST L
136 R↓
137 RTN
// clone and read new
138 LBL 15
139 RCL 00
140 STO 02
141 R↓
142 RCL 01
143 STO 03
144 R↓
145 GTO 09
// cancel GCD
146 LBL 16
147 RCL 01
// zero numerator?
148 X=0?
149 RTN
150 RCL 00
151 XEQ "GCD"
152 STO÷ 01
153 STO÷ 00
// display
154 XEQ 14
155 RTN
// normalize pair
156 LBL 19
157 RCL 00
158 ENTER
159 RCL 02
160 XEQ "LCM"
// store LCM as have stacked in Y denominator
161 STO 00
162 X<>Y
163 ÷
// grow base fraction numerator
164 STO× 01
165 RCL 00
166 RCL 02
167 ÷
// grow second fraction numerator
168 STO× 03
169 RTN

// ========= INTS ==========
// ========= GCD ==========
170 LBL "GCD"
// like hidden [FIND]?
171 "[GCD]"
// save a return
172 GTO "XINDA"
173 LBL "[GCD]"
174 MOD
175 LASTX
176 X<>Y
177 X≠0?
178 GTO "[GCD]"
179 +
180 XEQ "DRPXY"
181 GTO "XIT1"

// ========= LCM ==========
182 LBL "LCM"
// like hidden [FIND]?
183 "[LCM]"
184 GTO "XINDA"
185 LBL "[LCM]"
186 XEQ "GCD"
187 RCL "X"
188 X<>Y
189 ÷
190 RCL× "Y"
191 XEQ "DRPXY"
192 GTO "XIT1"

// ========= PDFS and special functions ==========
// ========= beta function ==========
193 LBL "BETA"
194 "[BETA]"
195 GTO "XINDA"
196 LBL "[BETA]"
197 RCL ST Y
198 GAMMA
199 RCL ST Y
200 GAMMA
201 ×
202 RCL ST Z
203 RCL ST Z
204 +
205 GAMMA
206 ÷
207 XEQ "DRPXY"
208 GTO "XIT1"

// ========= execute indirect alpha (entry point) ==========
// Use RCLT if you need the global T restored
// otherwise it's gone for evaluation
// easiest way of getting a "free" working register
209 LBL "XINDA"
// save stack
210 LSTO "X"
211 R↓
212 LSTO "Y"
213 R↓
214 LSTO "Z"
215 R↓
216 LSTO "T"
// make local temp context for local T
217 LSTO "U"
218 R↓
// save last X
219 LASTX
220 LSTO "L"
221 R↓
// save registers
222 RCL "REGS"
223 LSTO "R"
// local temp context for registers
224 LSTO "S"
225 R↓
// do indirect
226 ASTO ST T
// no need for XEQ
227 GTO IND ST T

// ========= exit points ==========
// return a number of items
// tail call GTO
// perform all the clean up FUNC style
// use DRPX to consume input stack datum
// so FUNC 11 is a DRPX XIT1 kinda XEQ
// ========= zero return datums ==========
228 LBL "XIT0"
229 XEQ 00
230 XEQ 04
231 RTN

// ========= one return datum ==========
232 LBL "XIT1"
233 XEQ 00
234 XEQ 03
235 GTO 05

// ========= two return datums ==========
236 LBL "XIT2"
237 XEQ 00
238 XEQ 02
239 GTO 06

// ========= three return datums ==========
240 LBL "XIT3"
241 XEQ 00
242 XEQ 01
243 GTO 07

// ========= four return datums ==========
244 LBL "XIT4"
245 XEQ "STOT"
246 XEQ 00
247 GTO "LRCLT"

// ========= exit stack repair ==========
248 LBL 04
249 RCL "T"
250 LBL 03
251 RCL "Z"
252 LBL 02
253 RCL "Y"
254 LBL 01
255 RCL "X"
256 RTN

// ========= rotary fixing ==========
257 LBL 05
258 R↓
259 LBL 06
260 R↓
261 LBL 07
262 R↓
263 RTN

// ========= T management ==========
// ========= repair global T ==========
264 LBL "RCLT"
265 RCL "T"
266 R↓
267 RTN

// ========= store local T (U) ==========
// needs a LSTO "U" in the outer context
// so that "U" remains local
268 LBL "STOT"
269 R↑
270 STO "U"
271 R↓
272 RTN

// ========= repair local T (U) ==========
273 LBL "LRCLT"
274 RCL "U"
275 R↓
276 RTN

// ========= restore registers and last X ==========
// restore registers called by XIT0-XIT4.
277 LBL 00
278 RCL "R"
279 STO "REGS"
280 R↓
// restore last X
281 RCL "L"
282 STO ST L
283 R↓
284 RTN

// ========= drop one return value ==========
// T->Z->Y->X->L
// local context
285 LBL "DRPX"
286 LSTO "U"
287 XEQ "STOT"
288 RCL "X"
289 STO "L"
290 R↓
291 RCL "Y"
292 STO "X"
293 R↓
294 RCL "Z"
295 STO "Y"
296 R↓
297 RCL "T"
298 STO "Z"
299 R↓
300 GTO "LRCLT"

// ========= drop two return values ==========
301 LBL "DRPXY"
302 XEQ "DRPX"
303 GTO "DRPX"

// ========= temporary register switching ==========
// imoprt local copy of registers to S
304 LBL "IMPRG"
305 XEQ "EXREG"
306 GTO "EXREG"

// this is it's own inverse, if used twice by the above S
// is initialized with a local copy of REGS
// use this to export registers from function
307 LBL "EXREG"
308 XEQ "STOT"
309 RCL "R"
310 STO "S"
311 R↓
312 RCL "REGS"
313 STO "R"
314 R↓
315 XEQ "LRCLT"
// ========= export registers from S ==========
316 LBL "EXPRG"
317 XEQ "STOT"
318 RCL "S"
319 STO "REGS"
320 R↓
321 GTO "LRCLT"

// ========= utility functions ==========
// ========= test shift was last key ==========
322 LBL "SFT?"
323 FS? 64
324 RTNYES
325 RTNNO

// ========= programatic summation template ==========
// a function to provide integration like summation
// as this is not built in but would be useful
// use PGMMENU
// MVAR "Σ"
// ..
// RCL- "Σ"
// RTN
// >>"Select Σf(x) Program"
// ""
// XEQ "PGMSUM"
// STO knowns
// STO "LLIM"
// STO "ULIM"
// >>"Set Vars; Select Σvar"
// ""
// XEQ "SUMATE"
// >>"VIEW "Σ""

// T: ??
// Z: ??
// Y: Last term evaluated
// X: Sum

// ========= programatic integration template ==========
// subtract the integral MVAR in integrals
// this makes setting it to zero integrates
// and using a program in solve then also works
// messages displayed as >> in integrate app
// MVAR "∫"
// ..
// RCL- "∫"
// RTN
// >>"Select ∫f(x) Program"
// PGMINT ""
// STO knowns
// STO "LLIM"
// STO "ULIM"
//? STO "ACC"
// >>"Set Vars; Select ∫var"
// INTEG ""
// >>"VIEW "∫""

// T: ??
// Z: ??
// Y: Uncertainty
// X: Integral


// ========= programatic solve template ==========
// PGMSLV ""
// STO knowns
// SOLVE ""

// T: Solve state (GTO IND ST T // plus offset?)
// = 0: Solved
// = 1: Sign reversal
// = 2: Extremum
// = 3: Bad guesses
// = 4: Function constant
// Z: f(X(t))
// Y: X(t-1)
// X: X(t)


