00 { 889-Byte Prgm }
// 4STK mode default, FUNC does not compile
// LBL A-J/a-e are local lettered
// Max label local 19
// Max register number so far 04
// Stats reserve registers 11 to 23
// Temp working register 24
// Local VARS
// L last X
// R REGS
// S temporary local REGS
// T T
// U temporary local T
// X X
// Y Y
// Z Z

// ========= app menu ==========
01 LBL "APP"
// MENU keys GTO for menu change, XEQ for operation
02 "FRAC"
03 KEY 1 GTO "FRAC"
04 ""
05 KEY 2 XEQ "INTS"
06 ""
07 KEY 3 XEQ "name"
08 ""
09 KEY 4 XEQ "name"
10 ""
11 KEY 5 XEQ "name"
12 ""
13 KEY 6 XEQ "name"
// UP
14 KEY 7 GTO "APP"
// DOWN
15 KEY 8 GTO "APP"
// EXIT
16 KEY 9 GTO "XITEND"
17 GTO "NTRMENU"

// ========= frac menu ==========
18 LBL "FRAC"
// MENU keys GTO for menu change, XEQ for operation
19 "÷+→"
20 KEY 1 XEQ 09
21 "÷++"
22 KEY 2 XEQ 10
23 "÷+-"
24 KEY 3 XEQ 11
25 "÷+×"
26 KEY 4 XEQ 12
27 "÷+÷"
28 KEY 5 XEQ 13
29 "→÷+"
30 KEY 6 XEQ 14
// UP
31 KEY 7 GTO "FRAC"
// DOWN
32 KEY 8 GTO "FRAC"
// EXIT
33 KEY 9 GTO "APP"
34 GTO "NTRMENU"

// ========= integers menu ==========
35 LBL "INTS"
// MENU keys GTO for menu change, XEQ for operation
36 "GCD"
37 KEY 1 XEQ "GCD"
38 ""
39 KEY 2 XEQ "name"
40 ""
41 KEY 3 XEQ "name"
42 ""
43 KEY 4 XEQ "name"
44 ""
45 KEY 5 XEQ "name"
46 ""
47 KEY 6 XEQ "name"
// UP
48 KEY 7 GTO "INTS"
// DOWN
49 KEY 8 GTO "INTS"
// EXIT
50 KEY 9 GTO "APP"
51 GTO "NTRMENU"

// ========= show menus and wait ==========
52 LBL "NTRMENU"
53 MENU
54 LBL 08
55 STOP
56 GTO 08

// ========= clear menus and exit ==========
57 LBL "XITEND"
58 CLMENU
59 EXITALL
60 RTN

// ========= frac local processsing ==========
// ignore resetting REGS back on exit, and fix last X
61 LBL 09
// store denominator
62 STO 00
63 R↓
64 X<>Y
65 ×
66 +
// store numerator
67 STO 01
68 RCL÷ 00
// makes decimal in X
69 GTO 16
70 LBL 10
71 XEQ 15
// add
// sub short cut
72 LBL 18
73 XEQ 19
// numerator addition
74 RCL 03
75 STO+ 01
76 R↓
77 GTO 16
78 LBL 11
79 XEQ 15
// sub
80 RCL 01
81 STO- 01
82 STO- 01
83 R↓
84 GTO 18
85 LBL 12
86 XEQ 15
// mul
// div short cut
87 LBL 17
88 RCL 02
89 STO× 00
90 R↓
91 RCL 03
92 STO× 01
93 R↓
94 GTO 16
95 LBL 13
96 XEQ 15
// div
97 RCL 00
98 STO 24
99 R↓
100 RCL 01
101 STO 00
102 R↓
103 RCL 24
104 STO 01
105 R↓
106 GTO 17
107 LBL 14
// to decimal in T, Z+Y/X
108 RCL 01
109 RCL÷ 00
110 ENTER
111 IP
112 ENTER
113 RCL× 00
114 RCL- 01
115 +/-
116 RCL 00
117 R↑
118 STO IND ST L
119 R↓
120 RTN
// clone and read new
121 LBL 15
122 RCL 00
123 STO 02
124 R↓
125 RCL 01
126 STO 03
127 R↓
128 GTO 09
// cancel GCD
129 LBL 16
130 RCL 01
131 RCL 00
132 XEQ "GCD"
133 STO÷ 01
134 STO÷ 00
// display
135 XEQ 14
136 RTN
// normalize pair
137 LBL 19
138 RCL 00
139 RCL 02
140 XEQ "GCD"
// temp
141 STO 24
142 RCL 00
143 RCL÷ 24
144 STO× 03
145 RCL 02
146 RCL÷ 24
147 ENTER
148 STO× 01
149 R↓
// and denominator
150 STO× 00
151 RTN

// ========= number theory ==========
// ========= GCD ==========
152 LBL "GCD"
153 ".GCD"
154 XEQ "XINDA"
155 RTN
156 LBL ".GCD"
157 MOD
158 LASTX
159 X<>Y
160 X≠0?
161 GTO ".GCD"
162 +
163 XEQ "DRPX"
164 XEQ "XIT1"
165 RTN


// ========= execute indirect alpha ==========
// Use RCLT if you need the global T restored
// otherwise it's gone.
166 LBL "XINDA"
// save stack
167 LSTO "X"
168 R↓
169 LSTO "Y"
170 R↓
171 LSTO "Z"
172 R↓
173 LSTO "T"
// make local temp context for local T
174 LSTO "U"
175 R↓
// save last X
176 LASTX
177 LSTO "L"
178 R↓
// save registers
179 RCL "REGS"
180 LSTO "R"
// local temp context for registers
181 LSTO "S"
182 R↓
// do indirect
183 ASTO ST T
184 XEQ IND ST T
185 RTN

// ========= exit points ==========
// return a number of items
// perform all the clean up FUNC style
// use DRPX to consume input
// so FUNC 11 is a DRPX XIT1 kinda XEQ
// of a XINDA
// ========= zero return datums ==========
186 LBL "XIT0"
187 XEQ 00
188 XEQ 04
189 RTN

// ========= one return datum ==========
190 LBL "XIT1"
191 XEQ 00
192 XEQ 03
193 XEQ 05
194 RTN

// ========= two return datums ==========
195 LBL "XIT2"
196 XEQ 00
197 XEQ 02
198 XEQ 06
199 RTN

// ========= three return datums ==========
200 LBL "XIT3"
201 XEQ 00
202 XEQ 01
203 XEQ 07
204 RTN

// ========= four return datums ==========
205 LBL "XIT4"
206 XEQ "STOT"
207 XEQ 00
208 XEQ "LRCLT"
209 RTN

// ========= exit stack repair ==========
210 LBL 04
211 RCL "T"
212 LBL 03
213 RCL "Z"
214 LBL 02
215 RCL "Y"
216 LBL 01
217 RCL "X"
218 RTN

// ========= rotary fixing ==========
219 LBL 07
220 R↑
221 LBL 06
222 R↑
223 LBL 05
224 R↑
225 RTN

// ========= T management ==========
// ========= repair global T ==========
226 LBL "RCLT"
227 RCL "T"
228 R↓
229 RTN

// ========= store local T (U) ==========
230 LBL "STOT"
231 R↑
232 STO "U"
233 R↓
234 RTN

// ========= repair local T (U) ==========
235 LBL "LRCLT"
236 RCL "U"
237 R↓
238 RTN

// ========= restore registers and last X ==========
// restore registers called by XIT0-XIT4.
239 LBL 00
240 RCL "R"
241 STO "REGS"
242 R↓
// restore last X
243 RCL "L"
244 STO ST L
245 R↓
246 RTN

// ========= drop one return value ==========
// T->Z->Y->X->L
// local context
247 LBL "DRPX"
248 LSTO "U"
249 XEQ "STOT"
250 RCL "X"
251 STO "L"
252 R↓
253 RCL "Y"
254 STO "X"
255 R↓
256 RCL "Z"
257 STO "Y"
258 R↓
259 RCL "T"
260 STO "Z"
261 R↓
262 XEQ "LRCLT"
263 RTN

// ========= temporary register switching ==========
// imoprt local copy of registers to S
264 LBL "IMPRG"
265 XEQ "EXREG"
266 XEQ "EXREG"
267 RTN
// this is it's own inverse, if used twice by the above S
// is initialized with a local copy of REGS
// use this to export registers from function
268 LBL "EXREG"
269 XEQ "STOT"
270 RCL "R"
271 STO "S"
272 R↓
273 RCL "REGS"
274 STO "R"
275 R↓
276 XEQ "LRCLT"
// ========= export registers from S ==========
277 LBL "EXPRG"
278 XEQ "STOT"
279 RCL "S"
280 STO "REGS"
281 R↓
282 XEQ "LRCLT"
283 RTN

// ========= utility functions ==========
// ========= test shift was last key ==========
284 LBL "SFT?"
285 FS? 64
286 RTNYES
287 RTNNO
