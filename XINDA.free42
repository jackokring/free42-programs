00 { 714-Byte Prgm }
// 4STK mode default, FUNC does not compile
// LBL A-J/a-e are local lettered
// Max label local 19
// Max register number so far 04
// Stats reserve registers 11 to 23
// Temp working register 24
// Local VARS
// L last X
// R REGS
// S temporary local REGS
// T T
// U temporary local T
// X X
// Y Y
// Z Z

// ========= app menu ==========
01 LBL "APP"
// MENU keys GTO for menu change, XEQ for operation
02 "FRAC"
03 KEY 1 GTO "FRAC"
04 ""
05 KEY 2 XEQ "name"
06 ""
07 KEY 3 XEQ "name"
08 ""
09 KEY 4 XEQ "name"
10 ""
11 KEY 5 XEQ "name"
12 ""
13 KEY 6 XEQ "name"
// UP
14 KEY 7 GTO "APP"
// DOWN
15 KEY 8 GTO "APP"
// EXIT
16 KEY 9 GTO "XITEND"
17 GTO "NTRMENU"

// ========= frac menu ==========
18 LBL "FRAC"
// MENU keys GTO for menu change, XEQ for operation
19 "÷+→"
20 KEY 1 XEQ 09
21 "÷++"
22 KEY 2 XEQ 10
23 "÷+-"
24 KEY 3 XEQ 11
25 "÷+×"
26 KEY 4 XEQ 12
27 "÷+÷"
28 KEY 5 XEQ 13
29 "→÷+"
30 KEY 6 XEQ 14
// UP
31 KEY 7 GTO "FRAC"
// DOWN
32 KEY 8 GTO "FRAC"
// EXIT
33 KEY 9 GTO "APP"
34 GTO "NTRMENU"

// ========= show menus and wait ==========
35 LBL "NTRMENU"
36 MENU
37 LBL 08
38 STOP
39 GTO 08

// ========= clear menus and exit ==========
40 LBL "XITEND"
41 CLMENU
42 EXITALL
43 RTN

// ========= frac local processsing ==========
// ignore resetting REGS back on exit, and fix last X
44 LBL 09
// store denominator
45 STO 00
46 R↓
47 X<>Y
48 ×
49 +
// store numerator
50 STO 01
51 RCL÷ 00
// makes decimal in X
52 GTO 16
53 LBL 10
54 XEQ 15
// add
// sub short cut
55 LBL 18
56 XEQ 19
// numerator addition
57 RCL 03
58 STO+ 01
59 R↓
60 GTO 16
61 LBL 11
62 XEQ 15
// sub
63 RCL 01
64 STO- 01
65 STO- 01
66 R↓
67 GTO 18
68 LBL 12
69 XEQ 15
// mul
// div short cut
70 LBL 17
71 RCL 02
72 STO× 00
73 R↓
74 RCL 03
75 STO× 01
76 R↓
77 GTO 16
78 LBL 13
79 XEQ 15
// div
80 RCL 00
81 STO 24
82 R↓
83 RCL 01
84 STO 00
85 R↓
86 RCL 24
87 STO 01
88 R↓
89 GTO 17
90 LBL 14
// to decimal in T, Z+Y/X
91 RCL 01
92 RCL÷ 00
93 ENTER
94 IP
95 ENTER
96 RCL× 00
97 RCL- 01
98 +/-
99 RCL 00
100 R↑
101 STO IND ST L
102 R↓
103 RTN
// clone and read new
104 LBL 15
105 RCL 00
106 STO 02
107 R↓
108 RCL 01
109 STO 03
110 R↓
111 GTO 09
// cancel GCD
112 LBL 16

// display
113 XEQ 14
114 RTN
// normalize pair
115 LBL 19

116 RTN

// ========= execute indirect alpha ==========
// Use RCLT if you need the global T restored
// otherwise it's gone.
117 LBL "XINDA"
// save stack
118 LSTO "X"
119 R↓
120 LSTO "Y"
121 R↓
122 LSTO "Z"
123 R↓
124 LSTO "T"
// make local temp context for local T
125 LSTO "U"
126 R↓
// save last X
127 LASTX
128 LSTO "L"
129 R↓
// save registers
130 RCL "REGS"
131 LSTO "R"
// local temp context for registers
132 LSTO "S"
133 R↓
// do indirect
134 ASTO IND ST T
135 XEQ IND ST T
136 RTN

// ========= exit points ==========
// return a number of items
// perform all the clean up FUNC style
// use DRPX to consume input
// so FUNC 11 is a DRPX XIT1 kinda XEQ
// of a XINDA
// ========= zero return datums ==========
137 LBL "XIT0"
138 XEQ 00
139 XEQ 04
140 RTN

// ========= one return datum ==========
141 LBL "XIT1"
142 XEQ 00
143 XEQ 03
144 XEQ 05
145 RTN

// ========= two return datums ==========
146 LBL "XIT2"
147 XEQ 00
148 XEQ 02
149 XEQ 06
150 RTN

// ========= three return datums ==========
151 LBL "XIT3"
152 XEQ 00
153 XEQ 01
154 XEQ 07
155 RTN

// ========= four return datums ==========
156 LBL "XIT4"
157 XEQ "STOT"
158 XEQ 00
159 XEQ "LRCLT"
160 RTN

// ========= exit stack repair ==========
161 LBL 04
162 RCL "T"
163 LBL 03
164 RCL "Z"
165 LBL 02
166 RCL "Y"
167 LBL 01
168 RCL "X"
169 RTN

// ========= rotary fixing ==========
170 LBL 07
171 R↑
172 LBL 06
173 R↑
174 LBL 05
175 R↑
176 RTN

// ========= T management ==========
// ========= repair global T ==========
177 LBL "RCLT"
178 RCL "T"
179 R↓
180 RTN

// ========= store local T (U) ==========
181 LBL "STOT"
182 R↑
183 STO "U"
184 R↓
185 RTN

// ========= repair local T (U) ==========
186 LBL "LRCLT"
187 RCL "U"
188 R↓
189 RTN

// ========= restore registers and last X ==========
// restore registers called by XIT0-XIT4.
190 LBL 00
191 RCL "R"
192 STO "REGS"
193 R↓
// restore last X
194 RCL "L"
195 STO IND ST L
196 R↓
197 RTN

// ========= drop one return value ==========
// T->Z->Y->X->L
// local context
198 LBL "DRPX"
199 LSTO "U"
200 XEQ "STOT"
201 RCL "X"
202 STO "L"
203 R↓
204 RCL "Y"
205 STO "X"
206 R↓
207 RCL "Z"
208 STO "Y"
209 R↓
210 RCL "T"
211 STO "Z"
212 R↓
213 XEQ "LRCLT"
214 RTN

// ========= temporary register switching ==========
// imoprt local copy of registers to S
215 LBL "IMPRG"
216 XEQ "EXREG"
217 XEQ "EXREG"
218 RTN
// this is it's own inverse, if used twice by the above S
// is initialized with a local copy of REGS
219 LBL "EXREG"
220 XEQ "STOT"
221 RCL "R"
222 STO "S"
223 R↓
224 RCL "REGS"
225 STO "R"
226 R↓
227 XEQ "LRCLT"
// ========= export registers from S ==========
228 LBL "EXPRG"
229 XEQ "STOT"
230 RCL "S"
231 STO "REGS"
232 R↓
233 XEQ "LRCLT"
234 RTN

// ========= utility functions ==========
// ========= test shift was last key ==========
235 LBL "SFT?"
236 FS? 64
237 RTNYES
238 RTNNO
